install.packages("shinydashboard")
shiny::runApp()
runApp()
runApp()
library(shinydashboard)
runApp()
runApp()
kippcolors::use_kipp_chicago_css
kippcolors::use_kipp_chicago_css(color = "orange")
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinydashboard)
runApp()
library(shinydashboard)
runApp()
runApp()
library(shinydashboard)
runApp()
runApp()
runApp()
source('~/Dropbox (KIPP Chicago Schools)/dev/R/Shiny Apps/tntp/library.R', echo=TRUE)
source('~/Dropbox (KIPP Chicago Schools)/dev/R/Shiny Apps/tntp/library.R', echo=TRUE)
runApp()
runApp()
validate
runApp()
runApp()
runApp()
runApp()
runApp()
# UI -----
ui <- dashboardPage(
dashboardHeader(title = "TNTP Explorer"),
dashboardSidebar(),
dashboardBody(
tags$head(tags$link(rel = "stylesheet", type = "text/css", href = "kippcolors_orange.css")),
fluidRow(
## Tab Box for grid_plot
tabBox(width = 12,
title = "Grid",
tabPanel("grid_plot",
plotOutput("grid_plot",
click = "grid_plot_click"
)
), #end tab panel
tabPanel("yoy", "TEST")
)
), #end fluidRow
fluidRow(
box(title = "Domain Detail",
width =12,
plotOutput("domain_detail")
) #end box
)
)
)
runApp()
install.packages('shinycssloaders')
runApp()
runApp()
runApp()
runApp()
runApp()
plot_items(domain)
runApp()
domains_long_data %>%
ggplot(aes(x=year, y=value)) +
geom_line(aes(group = school), ) +
geom_point(data = domains_long_data %>% group_by(school, domain_group) %>%
filter(value == max(value))) +
facet_grid(domain_group ~ school ,
scales = "free_y",
switch = "y") +
scale_y_continuous(position = "right") +
theme_kipp_light() +
theme( strip.text.y = element_text(angle = 180,
size = 8),
axis.text.x = element_text(angle = 45,
hjust = 1)) +
labs(x = "Term administered",
y = "Score")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
season_year <- ici_bm %>% select(year, season, sy) %>% distinct() #%>% pull(year)
?spread
clean_names("Spring 2019")
make_clean_names("Spring 2019")
runApp()
runApp()
runApp()
jk_schools_spread() %>%
ggplot(aes(x=year_1, xend=year_2, y=school_abbrev, yend=school_abbrev)) +
geom_link(data = jk_benchmarks(),
aes(x = year_1,
xend=year_2,
y = "KAC",
yend = "KOP",
alpha = ..index..),
color = "hotpink"
) +
geom_segment(aes(x=year_1, xend=year_2, y=school_abbrev, yend=school_abbrev, color = pos_change), arrow = arrow(length = unit(0.04, "npc"), type = "closed")) +
geom_point(aes(x=year_1 , y=school_abbrev),  color=kipp_colors$darkgray) +
geom_point(data = jk_schools_spread() %>% filter(is.na(year_1)),
aes(x=year_2 ,
y=school_abbrev), color=kipp_colors$darkgray) +
#geom_vline(data = jk_benchmarks(), aes(xintercept = value)) +
facet_wrap(~prompt, ncol = 7) +
scale_color_kipp(reverse = T) +
scale_x_continuous(labels =  c(25, 50, 75), breaks= c(.25, .5, .75)) +
theme_kipp_light() +
theme(strip.text = element_text( size=7, hjust = 0),
strip.placement = "outside",
axis.text.x = element_text(angle = 45, hjust=1)) +
labs(x = "Percent Agreeing", y="", color = sprintf("%s\nâ‰¥ %s", year_end(), year_start()))
runApp()
runApp()
runApp()
runApp()
runApp()
p <- jk_schools_spread() %>%
ggplot(aes(x=year_1,
xend=year_2,
y=prompt))
runApp()
Sys.getenv("BQ_AUTH_FILE")
Sys.getenv("BQ_PROJECT")
library(silounloadr)
install.packages(c("bigrquery", "forcats", "ggforce", "janitor", "shiny", "shinycssloaders", "shinydashboard", "tidytext", "tidyverse"))
library(silounloadr)
remotes::install_github('kippchicago/silounloadr')
install.packages('remotes')
remotes::install_github('kippchicago/silounloadr')
library(silounloadr)
# Data -----
bq_auth_file <-Sys.getenv("BQ_AUTH_FILE")
bq_project <- Sys.getenv("BQ_PROJECT")
bigrquery::set_service_token(bq_auth_file)
bigrquery::bq_auth(bq_auth_file)
bigrquery::set_service_token(bq_auth_file)
?bq_Auth
?bq_auth
bq_auth_file
bigrquery::bq_auth(path = bq_auth_file)
domains <- get_tntp("domains") %>% collect
domains %>% janitor::tabyl(domain_group)
,
shiny::runApp()
runApp()
remotes::install_github('kippchicago/kippcolors')
source("library.R", local = TRUE)
runApp()
install.packages('ggstance')
runApp()
runApp()
runApp()
install.packages(c("ggstance", "scales"))
install.packages(c("dplyr", "DT", "feather", "forcats", "formattable", "ggplot2", "googleCloudStorageR", "htmlwidgets", "janitor", "lubridate", "magrittr", "readr", "shiny", "shinycssloaders", "shinydashboard", "sparkline", "tidyr"))
items <- get_tntp('items') %>% collect
items_bm <- get_tntp('items_benchmarks') %>% collect() %>%
mutate(domain_group = if_else(domain_group == "Academic Expectations",
"Academic Opportunity",
domain_group))
items <- items %>% mutate(clean_question = str_remove(clean_question, "\\*+"),
domain_group = if_else(domain_group == "Academic Expectations",
"Academic Opportunity",
domain_group))
domains <- get_tntp("domains") %>% collect
domains_bm <- get_tntp("domains_benchmarks") %>% collect
ici <- get_tntp("ici") %>% collect
ici_bm <- get_tntp("ici_benchmarks") %>% collect
items %>% tabyl(variable)
ici_ici <- ici %>%
filter(measure == "Instructional Culture Index") %>%
rename(domain_group = measure)
domains_ici <- domains %>%
bind_rows(ici_ici) %>%
mutate(season = str_extract(year, "Fall|Spring"),
sy = str_extract(year, regex("\\d+")),
domain_group = if_else(domain_group == "Academic Expectations",
"Academic Opportunity",
domain_group)) %>%
arrange(sy, desc(season)) %>%
mutate(year = fct_inorder(year))
domains_ici_bm <- domains_bm %>%
bind_rows(ici_bm %>%  mutate(domain_group = "Instructional Culture Index")) %>%
mutate(season = str_extract(year, "Fall|Spring"),
sy = str_extract(year, regex("\\d+")),
domain_group = if_else(domain_group == "Academic Expectations",
"Academic Opportunity",
domain_group)) %>%
arrange(sy, desc(season)) %>%
mutate(year = fct_inorder(year))
items %>%
filter(domain_group == domain,
year == term) %>%
mutate(school_abbrev = abbreviate(variable, minlength = 2L, strict = FALSE)) %>% tabyl(school_abbrev)
items %>%
filter(domain_group == "Leadership",
year == "Fall 2019") %>%
mutate(school_abbrev = abbreviate(variable, minlength = 2L, strict = FALSE)) %>% tabyl(school_abbrev)
runApp()
items %>%
filter(domain_group == "Leadership",
year == "Fall 2019") %>%
mutate(school_abbrev = abbreviate(variable, minlength = 2L, strict = FALSE)) %>% tabyl(school_abbrev)
items %>%
filter(domain_group == "Leadership",
year == "Fall 2019") %>%
mutate(school_abbrev = abbreviate(variable, minlength = 2L, strict = FALSE)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KAPS", "KAP", school_abbrev)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KBPS", "KBP", school_abbrev)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KC", "Region", school_abbrev)) %>% tabyl(school_abbrev)
items %>%
filter(domain_group == "Leadership",
year == "Fall 2019") %>%
mutate(school_abbrev = abbreviate(variable, minlength = 2L, strict = FALSE)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KAPS", "KAP", school_abbrev)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KBPS", "KBP", school_abbrev)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KC", "Region", school_abbrev)) %>% mutate(school = factor(school_abbrev, levels = schools_order)) %>% tabyl(school_abbrev)
schools_order <- c("Region",
"KAP",
"KACP",
"KBP",
"KOP",
"KAMS",
"KAC",
"KBCP",
"KOA")
items %>%
filter(domain_group == "Leadership",
year == "Fall 2019") %>%
mutate(school_abbrev = abbreviate(variable, minlength = 2L, strict = FALSE)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KAPS", "KAP", school_abbrev)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KBPS", "KBP", school_abbrev)) %>%
mutate(school_abbrev = if_else(school_abbrev == "KC", "Region", school_abbrev)) %>% mutate(school = factor(school_abbrev, levels = schools_order)) %>% tabyl(school_abbrev)
runApp()
runApp()
Sys.getenv("BQ_PROJECT")
runApp()
runApp()
runApp()
